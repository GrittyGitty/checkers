const pieces=["black","black-king","red","red-king","empty"],movingDys=[[-1],[-1,1],[1],[-1,1]],eatingDys=movingDys.map(e=>e.map(e=>2*e)),colors=["black","red"],EMPTY_VALUE=pieces.length-1,clsx=(...e)=>{var t=Object.entries(e.pop()).filter(([,e])=>Boolean(e)).map(([e])=>e);return[...e,...t].join(" ")},defaultSetup={turn:"black",grid:`
-r-r-r-r
r-r-r-r-
-r-r-r-r
--------
--------
b-b-b-b-
-b-b-b-b
b-b-b-b-
`.trim().split("\n").filter(Boolean).join("\n")};class GridUpdate{constructor(e,t,r=EMPTY_VALUE){this.indices={row:e,column:t},this.value=r}static updateFactory(e,t,...r){let o=[];return o.push(new GridUpdate(e.finalRow,e.finalColumn,t)),r.forEach(({indices:e})=>o.push(new GridUpdate(e.row,e.column))),o}}function forEach(r){for(let t=0;t<8;t++)for(let e=0;e<8;e++)r(t,e)}const dom=(()=>{const r=document.getElementById("table"),s=document.getElementById("turnDiv"),i=document.getElementById("trailingDiv"),u=document.getElementById("containerBoard"),t=document.getElementById("reset"),o=document.getElementById("share"),d="can-move",c=pieces.map((e,t)=>"piece-"+pieces[t]),g=c[EMPTY_VALUE],p=(e,t)=>r.rows[e].cells[t],m=e=>{const r=new Set(e.map(({row:e,column:t})=>e+","+t));return(e,t)=>r.has(e+","+t)};let h=!1;const f=r=>forEach((e,t)=>r({row:e,column:t,domCell:p(e,t)}));let{left:a,top:n,width:l,height:C}=r.getBoundingClientRect();function v({clientX:e,clientY:t}){e-=a+window.pageXOffset,t-=n+window.pageYOffset;return e>l||t>C?{row:-1,column:-1}:{row:Math.floor(t/C*8),column:Math.floor(e/l*8)}}return r.addEventListener("mousedown",function(e){let{row:o,column:a}=v(e);var t=(t=new Set(p(o,a).classList)).has.bind(t);if(t(d)&&!t(g)){h=!0,u.addEventListener("mousemove",n),u.addEventListener("mouseup",function e(t){h=!1,state.updateUI(),u.removeEventListener("mousemove",n),i.style.backgroundImage="",i.style.top="-1000px",i.style.left="-1000px";var{row:t,column:r}=v(t);BoardState.handleMove(t,r,o,a),u.removeEventListener("mouseup",e)}),i.className=c.find(t);const{width:r,height:l}=i.getBoundingClientRect();t=state.getLegalTargets(o,a);function n(e){i.style.top=e.clientY-l/2+"px",i.style.left=e.clientX-r/2+"px"}state.updatedGrid([new GridUpdate(o,a,EMPTY_VALUE)]).updateUI(t),i.style.top=e.clientY-l/2+"px",i.style.left=e.clientX-r/2+"px"}}),window.onresize=()=>({left:a,top:n,width:l,height:C}=r.getBoundingClientRect()),{updateUI({grid:e,turn:t,legalTargets:r,piecesThatCanMove:o}){s.style.backgroundColor=t;{var[a,{legalTargets:t,piecesThatCanMove:e}]=[e,{legalTargets:r,piecesThatCanMove:o}];const n=m(t),l=m(e);f(({row:e,column:t,domCell:r})=>{var o=a[e][t],o=clsx(c[o],{"legal-target":n(e,t),"can-move":l(e,t)&&!h});r.className!==o&&(r.className=o)})}},registerShare(e){o.addEventListener("click",e)},registerReset(e){t.addEventListener("click",e)},registerHover(o){f(({domCell:e,row:t,column:r})=>{e.addEventListener("mouseover",()=>o(t,r))})},toast:function(e,t=2e3){const r=document.createElement("div");r.classList.add("toast"),r.innerText=e,document.body.appendChild(r),setTimeout(()=>{document.body.removeChild(r)},t)}}})();class BoardState{constructor(e,t,{flaggedCell:r}={}){this.grid=e,this.currentTurn=t,this.flaggedCell=r,this.piecesThatCanMove=this.getPiecesThatCanMove()}updatedGrid(e){e=BoardState.computeGrid(this.grid,e);return new BoardState(e,this.currentTurn)}updateFlaggedCell(e=void 0){return new BoardState(this.grid,this.currentTurn,{flagged:e})}updateCurrentTurn(){var e=this.grid;return new BoardState(e,BoardState.oppositeColor(this.currentTurn))}getPiecesThatCanMove(){return allCellsForColor(this.grid,this.currentTurn).filter(({row:e,column:t})=>this.getLegalTargets(e,t).length)}updateUI(e=[]){return dom.updateUI({grid:this.grid,turn:this.currentTurn,legalTargets:e,piecesThatCanMove:this.piecesThatCanMove}),this}getLegalTargets(e,t){return allLogicalLegalMovesForCell(this,{startRow:e,startColumn:t}).map(({finalCell:e})=>e)}static oppositeColor(e){return e===colors[0]?colors[1]:colors[0]}static computeGrid(e,t){let o=deepCopy2DArr(e);return t.forEach(({indices:{row:e,column:t},value:r})=>{o[e][t]=r}),o}static handleMove(e,t,r,o){if(state.grid[e][t]!==EMPTY_VALUE||-1===e&&-1===t)return state.updateUI();var a,r=generateGridUpdatesForMoveIfLegal(state,{finalRow:e,finalColumn:t,startRow:r,startColumn:o});0<r.length&&(o=state.updatedGrid(r),r=3===r.length&&"king"!==pieces[r[r.length-1].value].split("-")[1]||4===r.length,a=0!==allLegalEatingMovesForCell(o.grid,e,t).length,didColorLose((state=r&&a?o.updateFlaggedCell({row:e,column:t}):o.updateFlaggedCell().updateCurrentTurn()).grid,state.currentTurn)&&(dom.toast(state.currentTurn+" lost! :(",5e3),resetGame())),state.updateUI(),store.state=state.serialize()}static startSession({grid:e,turn:t}){const o=changeGridStringToNumbers(e).trim().split("\n").map(e=>e.trim());e=new Array(o.length).fill(new Array(o[0].length).fill(0)).map((e,r)=>e.map((e,t)=>Number(o[r].charAt(t))));return new BoardState(e,t).updateUI()}serialize(){const t=["b","B","r","R","-"];return{grid:this.grid.map(e=>e.map(e=>t[e]).join("")).join("\n"),turn:this.currentTurn}}}function generateGridUpdatesForMoveIfLegal(e,{finalRow:t,finalColumn:r,startRow:o,startColumn:a}){var n=allLogicalLegalMovesForCell(e,{startRow:o,startColumn:a}).find(({finalCell:e})=>e.row===t&&e.column===r);return n?(n=n["updates"],(7===t||0===t)&&0<n.length&&n.push(new GridUpdate(t,r,pieces.indexOf(colorForCell(e.grid[o][a])+"-king"))),n):[]}function allLogicalLegalMovesForCell({grid:e,flaggedCell:t,currentTurn:r},{startRow:o,startColumn:a}){var n=e[o][a];return n===EMPTY_VALUE||colorForCell(n)!==r||o===t?.row&&a===t?.column?[]:(isThereAnEatingPossibilityForGivenColor(e,colorForCell(e[o][a]))?allLegalEatingMovesForCell:allLegalNonEatingMovesForCell)(e,o,a)}function isThereAnEatingPossibilityForGivenColor(r,e){return allCellsForColor(r,e).some(({row:e,column:t})=>0<allLegalEatingMovesForCell(r,e,t).length)}function colorForCell(e){return e!==EMPTY_VALUE?pieces[e].split("-")[0]:"empty"}function allLegalEatingMovesForCell(e,t,r){var o=[2,-2],a=[],n=e[t][r];if(n!==EMPTY_VALUE)for(var l of eatingDys[n])for(var s of o){var i,u,d,c=t+l,g=r+s;areRowsOutOfBounds(c)||areColumnsOutOfBounds(g)||(i=e[c][g],u=t+(Math.abs(l)-1)*Math.sign(l),s=r+(Math.abs(s)-1)*Math.sign(s),d=e[u][s],i===EMPTY_VALUE&&colorForCell(d)===BoardState.oppositeColor(colorForCell(n))&&a.push({finalCell:{row:c,column:g},updates:GridUpdate.updateFactory({finalRow:c,finalColumn:g},n,new GridUpdate(u,s),new GridUpdate(t,r))}))}return a}function allLegalNonEatingMovesForCell(e,t,r){var o=[1,-1],a=[],n=e[t][r];if(n!==EMPTY_VALUE)for(var l of movingDys[n])for(var s of o){var i=t+l,s=r+s;areRowsOutOfBounds(i)||areColumnsOutOfBounds(s)||e[i][s]===EMPTY_VALUE&&a.push({finalCell:{row:i,column:s},updates:GridUpdate.updateFactory({finalRow:i,finalColumn:s},n,new GridUpdate(t,r))})}return a}function allCellsForColor(r,o){const a=[];return forEach((e,t)=>{colorForCell(r[e][t])===o&&a.push({row:e,column:t})}),a}function didColorLose(r,e){return!allCellsForColor(r,e).some(({row:e,column:t})=>0<allLegalEatingMovesForCell(r,e,t).length||0<allLegalNonEatingMovesForCell(r,e,t).length)}const deepCopy2DArr=e=>e.map(e=>e.map(e=>e));function areRowsOutOfBounds(...e){return e.some(e=>8<=e||e<0)}function areColumnsOutOfBounds(...e){return e.some(e=>8<=e||e<0)}function changeGridStringToNumbers(e){return["b","B","r","R","-"].reduce((e,t,r)=>e.replaceAll(t,r),e)}const storageBackend=(()=>{const o="state",a="grid",n="turn",{pathname:l,href:s}=window.location,i=()=>{return(window.location.search?(e=new URLSearchParams(window.location.search),t=e.get(a),e=e.get(n),t?{grid:t,turn:e}:void 0):(()=>{try{return JSON.parse(localStorage.getItem(o))}catch(e){}})())||defaultSetup;var e,t};return{fetch:i,persist:({grid:e,turn:t}=defaultSetup)=>{var r=new URLSearchParams;r.set(a,e),r.set(n,t),history.pushState(null,"",l+"?"+r.toString()),localStorage.setItem(o,JSON.stringify({grid:e,turn:t}))},reset:()=>{history.pushState(null,"",l),localStorage.removeItem(o)},compileSharingUrl:function(){var e=new URLSearchParams,{grid:t,turn:r}=i();return e.set(a,t),e.set(n,r),s.split("?")[0]+"?"+e.toString()}}})(),store=(()=>{const{fetch:e,persist:r,reset:t,compileSharingUrl:o}=storageBackend;return{get state(){return e()},set state({grid:e,turn:t}){r({grid:e,turn:t})},reset:t,get share(){return o()}}})();function resetGame(){state=BoardState.startSession(defaultSetup),store.reset()}dom.registerShare(()=>{navigator.clipboard.writeText(store.share).then(()=>{dom.toast("URL with game-state copied to clipboard! ðŸŽ†ðŸŽ†ðŸŽ†")})}),dom.registerReset(resetGame),dom.registerHover((e,t)=>state.updateUI(state.getLegalTargets(e,t)));let state=BoardState.startSession(store.state);
//# sourceMappingURL=index.min.js.map