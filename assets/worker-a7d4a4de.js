var N=Object.defineProperty;var V=(i,l,f)=>l in i?N(i,l,{enumerable:!0,configurable:!0,writable:!0,value:f}):i[l]=f;var p=(i,l,f)=>(V(i,typeof l!="symbol"?l+"":l,f),f);(function(){"use strict";var i=(t=>(t.black="black",t.red="red",t))(i||{});const l=["black","black-king","red","red-king","empty"],f=[[-1],[-1,1],[1],[-1,1]],x=f.map(t=>t.map(e=>e*2)),v=[i.black,i.red],C=l.length-1;i.red;class g{constructor(e,n,o=C){p(this,"indices");p(this,"value");this.indices={row:e,column:n},this.value=o}static updateFactory(e,n,...o){const r=[];return r.push(new g(e.finalRow,e.finalColumn,n)),o.forEach(({indices:s})=>r.push(new g(s.row,s.column))),r}}function M(t){for(let e=0;e<8;e++)for(let n=0;n<8;n++)t(e,n)}const b=l.map((t,e)=>e!==C?l[e].split("-")[0]:void 0);function T(t){return t===v[0]?v[1]:v[0]}i.black,`
-r-r-r-r
r-r-r-r-
-r-r-r-r
--------
--------
b-b-b-b-
-b-b-b-b
b-b-b-b-
`.trim().split(`
`).filter(Boolean).join(`
`);function w({grid:t,turn:e},{startRow:n,startColumn:o}){const r=t[n][o];return r===C||b[r]!==e?[]:A(t,b[t[n][o]])?y(t,n,o):P(t,n,o)}function A(t,e){return m(t,e).some(({row:n,column:o})=>y(t,n,o).length>0)}function y(t,e,n){const o=[2,-2],r=[],s=t[e][n];if(s===C)return r;for(const c of x[s])for(const d of o){const a=e+c,u=n+d;if(E(a)||F(u))continue;const k=t[a][u],D=e+(Math.abs(c)-1)*Math.sign(c),G=n+(Math.abs(d)-1)*Math.sign(d),H=t[D][G];k===C&&b[H]===T(b[s])&&r.push({finalCell:{row:a,column:u},updates:g.updateFactory({finalRow:a,finalColumn:u},s,new g(D,G),new g(e,n))})}return r}function m(t,e){const n=[];return M((o,r)=>{b[t[o][r]]===e&&n.push({row:o,column:r})}),n}const O=t=>t.map(e=>e.map(n=>n));function E(...t){return t.some(e=>e>=8||e<0)}function F(...t){return t.some(e=>e>=8||e<0)}function P(t,e,n){const o=[1,-1],r=[],s=t[e][n];if(s===C)return r;for(const c of f[s])for(const d of o){const a=e+c,u=n+d;if(E(a)||F(u))continue;t[a][u]===C&&r.push({finalCell:{row:a,column:u},updates:g.updateFactory({finalRow:a,finalColumn:u},s,new g(e,n))})}return r}class h{constructor({grid:e,turn:n,flaggedCell:o,lastMove:r}){p(this,"grid");p(this,"turn");p(this,"flaggedCell");p(this,"piecesThatCanMove");p(this,"lastMove");this.grid=e,this.turn=n,this.flaggedCell=o,this.lastMove=r,this.piecesThatCanMove=this.getPiecesThatCanMove()}updatedGrid(e){return new h({...this,grid:h.computeGrid(this.grid,e)})}updateFlaggedCell(e){return new h({...this,flaggedCell:e})}updateLastMove(e){return new h({...this,lastMove:e})}updateCurrentTurn(){return new h({...this,grid:this.grid,turn:T(this.turn)})}getAllLegalMovesForColor(){return m(this.grid,this.turn).map(e=>[e,w(this,{startRow:e.row,startColumn:e.column})])}getPiecesThatCanMove(){return(this.flaggedCell!=null?[this.flaggedCell]:m(this.grid,this.turn)).filter(({row:e,column:n})=>this.getLegalTargets(e,n).length)}getLegalTargets(e,n){return w(this,{startRow:e,startColumn:n}).map(({finalCell:o})=>o)}static computeGrid(e,n){const o=O(e);return n.forEach(({indices:{row:r,column:s},value:c})=>{o[r][s]=c}),o}serialize(){const e=["b","B","r","R","-"];return{grid:this.grid.map(n=>n.map(o=>e[o]).join("")).join(`
`),turn:this.turn}}static deserialize(e){return new h(e)}}const j=[1,1.2,1,1.2,0],z=({grid:t,turn:e})=>{let n=0;return M((o,r)=>{const s=t[o][r],c=b[s];if(!c)return;const d=j[s];n+=c===e?d:-d}),n},B=5;function L(t,e=B){if(!e)return z(t);let n=0;for(const[,o]of t.getAllLegalMovesForColor())for(const{updates:r}of o){const s=L(t.updatedGrid(r).updateCurrentTurn(),e-1);s>=n&&(n=s)}return n}self.addEventListener("message",t=>{const e=h.deserialize(t.data),n=String(e.grid),r={score:L(e),stringGrid:n};postMessage(r)})})();
//# sourceMappingURL=worker-a7d4a4de.js.map
