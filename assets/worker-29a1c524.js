var Q=Object.defineProperty;var R=(i,a,g)=>a in i?Q(i,a,{enumerable:!0,configurable:!0,writable:!0,value:g}):i[a]=g;var C=(i,a,g)=>(R(i,typeof a!="symbol"?a+"":a,g),g);(function(){"use strict";var i=(n=>(n.black="black",n.red="red",n))(i||{});const a=["black","black-king","red","red-king","empty"],g=[[-1],[-1,1],[1],[-1,1]],O=g.map(n=>n.map(e=>e*2)),w=[i.black,i.red],b=a.length-1;i.red;class p{constructor(e,t,o=b){C(this,"indices");C(this,"value");this.indices={row:e,column:t},this.value=o}static updateFactory(e,t,...o){const s=[];return s.push(new p(e.finalRow,e.finalColumn,t)),o.forEach(({indices:r})=>s.push(new p(r.row,r.column))),s}}function y(n){for(let e=0;e<8;e++)for(let t=0;t<8;t++)n(e,t)}const v=a.map((n,e)=>e!==b?a[e].split("-")[0]:void 0);function F(n){return n===w[0]?w[1]:w[0]}i.black,`
-r-r-r-r
r-r-r-r-
-r-r-r-r
--------
--------
b-b-b-b-
-b-b-b-b
b-b-b-b-
`.trim().split(`
`).filter(Boolean).join(`
`);function L({grid:n,turn:e},{startRow:t,startColumn:o}){const s=n[t][o];return s===b||v[s]!==e?[]:j(n,v[n[t][o]])?E(n,t,o):K(n,t,o)}function j(n,e){return T(n,e).some(({row:t,column:o})=>E(n,t,o).length>0)}function E(n,e,t){const o=[2,-2],s=[],r=n[e][t];if(r===b)return s;for(const l of O[r])for(const c of o){const u=e+l,f=t+c;if(G(u)||x(f))continue;const B=n[u][f],P=e+(Math.abs(l)-1)*Math.sign(l),D=t+(Math.abs(c)-1)*Math.sign(c),J=n[P][D];B===b&&v[J]===F(v[r])&&s.push({finalCell:{row:u,column:f},updates:p.updateFactory({finalRow:u,finalColumn:f},r,new p(P,D),new p(e,t))})}return s}function T(n,e){const t=[];return y((o,s)=>{v[n[o][s]]===e&&t.push({row:o,column:s})}),t}const z=n=>n.map(e=>e.map(t=>t));function G(...n){return n.some(e=>e>=8||e<0)}function x(...n){return n.some(e=>e>=8||e<0)}function K(n,e,t){const o=[1,-1],s=[],r=n[e][t];if(r===b)return s;for(const l of g[r])for(const c of o){const u=e+l,f=t+c;if(G(u)||x(f))continue;n[u][f]===b&&s.push({finalCell:{row:u,column:f},updates:p.updateFactory({finalRow:u,finalColumn:f},r,new p(e,t))})}return s}class d{constructor({grid:e,turn:t,flaggedCell:o,lastMove:s}){C(this,"grid");C(this,"turn");C(this,"flaggedCell");C(this,"lastMove");this.grid=e,this.turn=t,this.flaggedCell=o,this.lastMove=s}updatedGrid(e){return new d({...this,grid:d.computeGrid(this.grid,e)})}updateFlaggedCell(e){return new d({...this,flaggedCell:e})}updateLastMove(e){return new d({...this,lastMove:e})}updateCurrentTurn(){return new d({...this,grid:this.grid,turn:F(this.turn)})}getAllLegalMovesForColor(){return this.effectivePieces.map(e=>[e,L(this,{startRow:e.row,startColumn:e.column})]).filter(([,e])=>e.length)}get piecesThatCanMove(){return this.effectivePieces.filter(({row:e,column:t})=>this.getLegalTargets(e,t).length)}get effectivePieces(){return this.flaggedCell!=null?[this.flaggedCell]:T(this.grid,this.turn)}getLegalTargets(e,t){return L(this,{startRow:e,startColumn:t}).map(({finalCell:o})=>o)}static computeGrid(e,t){const o=z(e);return t.forEach(({indices:{row:s,column:r},value:l})=>{o[s][r]=l}),o}serialize(){const e=["b","B","r","R","-"];return{grid:this.grid.map(t=>t.map(o=>e[o]).join("")).join(`
`),turn:this.turn}}static deserialize(e){return new d(e)}}const m=1.5,M=2,h=4,N=5,k=10,A=N+k,I=[k,A,k,A,0],V=[[0,h,0,h,0,h,0,h],[m,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,m],[m,0,M,0,M,0,0,0],[0,0,0,M,0,M,0,m],[m,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,m],[h,0,h,0,h,0,h,0]],Y=(n,e,t,o)=>{const s=V[n][e];return n<=3&&t===i.red?o===i.red?s:-s:n>=4&&t===i.black?o===i.black?s:-s:0},q=({grid:n,turn:e})=>{let t=0;return y((o,s)=>{const r=n[o][s],l=v[r];if(!l)return;const c=I[r],u=Y(o,s,l,e);t+=(l===e?c:-c)+u}),t};function H(n,e){let t=0;const o=[{state:n,depth:e}];let s;for(;s=o.pop();){const{state:r,depth:l}=s;if(!l){const c=q(r);c>=t&&(t=c);continue}for(const[,c]of r.getAllLegalMovesForColor())for(const{updates:u}of c)o.push({state:r.updatedGrid(u).updateCurrentTurn(),depth:l-1})}return t}self.addEventListener("message",({data:n})=>{const e=d.deserialize(n.state),t=String(e.grid),s={score:H(e,n.depth),stringGrid:t};postMessage(s)})})();
//# sourceMappingURL=worker-29a1c524.js.map
