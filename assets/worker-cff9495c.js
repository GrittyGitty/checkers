var N=Object.defineProperty;var V=(i,l,f)=>l in i?N(i,l,{enumerable:!0,configurable:!0,writable:!0,value:f}):i[l]=f;var C=(i,l,f)=>(V(i,typeof l!="symbol"?l+"":l,f),f);(function(){"use strict";var i=(t=>(t.black="black",t.red="red",t))(i||{});const l=["black","black-king","red","red-king","empty"],f=[[-1],[-1,1],[1],[-1,1]],x=f.map(t=>t.map(n=>n*2)),m=[i.black,i.red],h=l.length-1;i.red;class g{constructor(n,e,o=h){C(this,"indices");C(this,"value");this.indices={row:n,column:e},this.value=o}static updateFactory(n,e,...o){const r=[];return r.push(new g(n.finalRow,n.finalColumn,e)),o.forEach(({indices:s})=>r.push(new g(s.row,s.column))),r}}function M(t){for(let n=0;n<8;n++)for(let e=0;e<8;e++)t(n,e)}const b=l.map((t,n)=>n!==h?l[n].split("-")[0]:void 0);function T(t){return t===m[0]?m[1]:m[0]}i.black,`
-r-r-r-r
r-r-r-r-
-r-r-r-r
--------
--------
b-b-b-b-
-b-b-b-b
b-b-b-b-
`.trim().split(`
`).filter(Boolean).join(`
`);function w({grid:t,turn:n},{startRow:e,startColumn:o}){const r=t[e][o];return r===h||b[r]!==n?[]:A(t,b[t[e][o]])?y(t,e,o):P(t,e,o)}function A(t,n){return v(t,n).some(({row:e,column:o})=>y(t,e,o).length>0)}function y(t,n,e){const o=[2,-2],r=[],s=t[n][e];if(s===h)return r;for(const c of x[s])for(const d of o){const a=n+c,u=e+d;if(E(a)||F(u))continue;const k=t[a][u],D=n+(Math.abs(c)-1)*Math.sign(c),G=e+(Math.abs(d)-1)*Math.sign(d),H=t[D][G];k===h&&b[H]===T(b[s])&&r.push({finalCell:{row:a,column:u},updates:g.updateFactory({finalRow:a,finalColumn:u},s,new g(D,G),new g(n,e))})}return r}function v(t,n){const e=[];return M((o,r)=>{b[t[o][r]]===n&&e.push({row:o,column:r})}),e}const O=t=>t.map(n=>n.map(e=>e));function E(...t){return t.some(n=>n>=8||n<0)}function F(...t){return t.some(n=>n>=8||n<0)}function P(t,n,e){const o=[1,-1],r=[],s=t[n][e];if(s===h)return r;for(const c of f[s])for(const d of o){const a=n+c,u=e+d;if(E(a)||F(u))continue;t[a][u]===h&&r.push({finalCell:{row:a,column:u},updates:g.updateFactory({finalRow:a,finalColumn:u},s,new g(n,e))})}return r}class p{constructor(n,e,{flaggedCell:o}={}){C(this,"grid");C(this,"turn");C(this,"flaggedCell");C(this,"piecesThatCanMove");this.grid=n,this.turn=e,this.flaggedCell=o,this.piecesThatCanMove=this.getPiecesThatCanMove()}updatedGrid(n){const e=p.computeGrid(this.grid,n);return new p(e,this.turn)}updateFlaggedCell(n){return new p(this.grid,this.turn,{flaggedCell:n})}updateCurrentTurn(){const n=this.grid;return new p(n,T(this.turn))}getAllLegalMovesForColor(){return v(this.grid,this.turn).map(n=>[n,w(this,{startRow:n.row,startColumn:n.column})])}getPiecesThatCanMove(){return(this.flaggedCell!=null?[this.flaggedCell]:v(this.grid,this.turn)).filter(({row:n,column:e})=>this.getLegalTargets(n,e).length)}getLegalTargets(n,e){return w(this,{startRow:n,startColumn:e}).map(({finalCell:o})=>o)}static computeGrid(n,e){const o=O(n);return e.forEach(({indices:{row:r,column:s},value:c})=>{o[r][s]=c}),o}serialize(){const n=["b","B","r","R","-"];return{grid:this.grid.map(e=>e.map(o=>n[o]).join("")).join(`
`),turn:this.turn}}static deserialize(n){return new p(n.grid,n.turn,{flaggedCell:n.flaggedCell})}}const j=[1,1.2,1,1.2,0],B=({grid:t,turn:n})=>{let e=0;return M((o,r)=>{const s=t[o][r],c=b[s];if(!c)return;const d=j[s];e+=c===n?d:-d}),e},z=5;function L(t,n=z){if(!n)return B(t);let e=0;for(const[,o]of t.getAllLegalMovesForColor())for(const{updates:r}of o){const s=L(t.updatedGrid(r).updateCurrentTurn(),n-1);s>=e&&(e=s)}return e}self.addEventListener("message",t=>{const n=p.deserialize(t.data),e=String(n.grid),r={score:L(n),stringGrid:e};postMessage(r)})})();
//# sourceMappingURL=worker-cff9495c.js.map
